from datetime import datetime
import requests
import sqlite3
import time



def get_crypto_price(crypto_id):
    url = "https://api.coingecko.com/api/v3/simple/price"
    params = {"ids": crypto_id, "vs_currencies": "usd"}
    try:
        response = requests.get(url, params=params, timeout=10)
        response.raise_for_status()
        data = response.json()
        return data[crypto_id]["usd"]
    except requests.exceptions.RequestException as e:
        print(f"Error fetching data: {e}")
        return None
    except KeyError:
        return None

coin_symbol = {
    'ton': 'the-open-network',
    'btc': 'bitcoin',
    'eth': 'ethereum',
    'sol': 'solana',
    'doge': 'dogecoin',
    'xrp': 'ripple',
    'bnb': 'binancecoin',
    'ada': 'cardano',
    'dot': 'polkadot',
    'usdt': 'tether',
    'ltc': 'litecoin'
}

conn = sqlite3.connect('asset.db')
c = conn.cursor()
c.execute("""CREATE TABLE IF NOT EXISTS user_asset(
symbole TEXT,
amount REAL
)""")

c.execute("""CREATE TABLE IF NOT EXISTS chart(
date TEXT,
overall REAL
)""")

now = datetime.now()
now = now.strftime("%Y-%m-%d %H:%M:%S")
def main():
    sum = 0
    all_prices = {}
    for x in range (1,6) :
        search= c.execute("""SELECT symbole FROM user_asset WHERE rowid = ?""",(x,))
        search = search.fetchone()
        search = search[0]
        crypto_id = coin_symbol.get(search, search)
        price = get_crypto_price(crypto_id)
        if price is not None:
            amount = c.execute("""SELECT amount FROM user_asset WHERE symbole=?""",(search,))
            amount = amount.fetchone()[0]
            price = round(price * amount,1)
            sum += price
            sum = round(sum,1)

            print(f"your {crypto_id} is {price}$ USD.")
            all_prices[crypto_id] = price

        else:
            print("Currency not found. Please try something else.")

    print(sum)
    c.execute("""INSERT INTO chart (date,overall) VALUES (?,?) """,(now,sum))



while True:
    main()
    conn.commit()
    time.sleep(4 * 60 * 60)



